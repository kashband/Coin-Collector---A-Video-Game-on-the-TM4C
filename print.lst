


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000                 PRESERVE8
   17 00000000         
   18 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   19 00000000                 THUMB
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   24 00000000         ; Output a 32-bit number in unsigned decimal format
   25 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   26 00000000         ; Output: none
   27 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   28 00000000         ; R0=0,    then output "0"
   29 00000000         ; R0=3,    then output "3"
   30 00000000         ; R0=89,   then output "89"
   31 00000000         ; R0=123,  then output "123"
   32 00000000         ; R0=9999, then output "9999"
   33 00000000         ; R0=4294967295, then output "4294967295"
   34 00000000         
   35 00000000        B 
                       fp      RN               11
   36 00000000 00000000 
                       count   EQU              0x0
   37 00000000 00000004 
                       num     EQU              0x4
   38 00000000         
   39 00000000         LCD_OutDec
   40 00000000 E92D 4BF0       PUSH             {R4-R9, R11, LR}
   41 00000004 F1BD 0D08       SUBS             SP, #8      ; Allocation
   42 00000008 46EB            MOV              fp, SP      ; fp <- SP
   43 0000000A F04F 0400       MOV              R4, #0
   44 0000000E F8CB 4000       STR              R4, [fp, #count]
   45 00000012 F8CB 0004       STR              R0, [fp, #num]
   46 00000016         
   47 00000016 F04F 050A       MOV              R5, #10
   48 0000001A         loop
   49 0000001A F8DB 4004       LDR              R4, [fp, #num]



ARM Macro Assembler    Page 2 


   50 0000001E FBB4 F6F5       UDIV             R6, R4, R5  ; Quotient
   51 00000022 FB06 F705       MUL              R7, R6, R5  ; Quotient * 10
   52 00000026 EBB4 0807       SUBS             R8, R4, R7  ; Mod = Num - Quoti
                                                            ent*10 
   53 0000002A F84D 8D04       PUSH             {R8}
   54 0000002E F8CB 6004       STR              R6, [fp, #num]
   55 00000032 F8DB 6000       LDR              R6, [fp, #count]
   56 00000036 3601            ADDS             R6, #1      ; increments counte
                                                            r
   57 00000038 F8CB 6000       STR              R6, [fp, #count]
   58 0000003C F8DB 4004       LDR              R4, [fp, #num] ; Checking done 
                                                            at bottom to allow 
                                                            for 0 case
   59 00000040 2C00            CMP              R4, #0      ; Checks if run out
                                                             of digits of origi
                                                            nal number
   60 00000042 D000            BEQ              next
   61 00000044 E7E9            B                loop
   62 00000046         
   63 00000046         next
   64 00000046 F8DB 4000       LDR              R4, [fp, #count]
   65 0000004A 2C00            CMP              R4, #0      ; checks if finishe
                                                            d writing all digit
                                                            s
   66 0000004C D008            BEQ              done
   67 0000004E BC01            POP              {R0}
   68 00000050 F100 0030       ADD              R0, #0x30   ; converts decimal 
                                                            number to ASCII equ
                                                            ivalent
   69 00000054 F7FF FFFE       BL               ST7735_OutChar ; Writes char to
                                                             screen
   70 00000058 3C01            SUBS             R4, #1      ; Decrement count
   71 0000005A F8CB 4000       STR              R4, [fp, #count]
   72 0000005E E7F2            B                next
   73 00000060         
   74 00000060         done
   75 00000060 B002            ADD              SP, #8      ; deallocation
   76 00000062 E8BD 4BF0       POP              {R4-R9, R11, LR}
   77 00000066 4770            BX               LR
   78 00000068         
   79 00000068         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   80 00000068         
   81 00000068         ; -----------------------LCD _OutFix--------------------
                       --
   82 00000068         ; Output characters to LCD display in fixed-point format
                       
   83 00000068         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   84 00000068         ; Inputs:  R0 is an unsigned 32-bit number
   85 00000068         ; Outputs: none
   86 00000068         ; E.g., R0=0,    then output "0.000"
   87 00000068         ;       R0=3,    then output "0.003"
   88 00000068         ;       R0=89,   then output "0.089"
   89 00000068         ;       R0=123,  then output "0.123"
   90 00000068         ;       R0=9999, then output "9.999"
   91 00000068         ;       R0>9999, then output "*.***"
   92 00000068         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   93 00000068         



ARM Macro Assembler    Page 3 


   94 00000068        B 
                       fp      RN               11
   95 00000068 FFFFFFFA 
                       star    EQU              -6          ; 0x2A - 30
   96 00000068 FFFFFFFE 
                       period  EQU              -2          ; Ox2E - 30
   97 00000068         ;count EQU 0x0 Same bindings as last time
   98 00000068         ;num EQU 0x4 Same bindings as last time
   99 00000068         
  100 00000068         LCD_OutFix
  101 00000068 E92D 4BF0       PUSH             {R4-R9, R11, LR}
  102 0000006C F1BD 0D08       SUBS             SP, #8      ; Allocation
  103 00000070 F242 7B0F       MOV              R11, #9999
  104 00000074 EBB0 0B0B       SUBS             R11, R0, R11
  105 00000078 D82F            BHI              stars
  106 0000007A 46EB            MOV              fp, SP      ; fp <- SP
  107 0000007C F04F 0405       MOV              R4, #5
  108 00000080 F8CB 4000       STR              R4, [fp, #count]
  109 00000084 F04F 0400       MOV              R4, #0
  110 00000088 F8CB 0004       STR              R0, [fp, #num]
  111 0000008C         
  112 0000008C F04F 050A       MOV              R5, #10
  113 00000090         loop2
  114 00000090 F8DB 9000       LDR              R9, [fp, #count]
  115 00000094 F1B9 0F02       CMP              R9, #2
  116 00000098 D015            BEQ              addPeriod   ; subroutine will p
                                                            lace the period on 
                                                            the stack and also 
                                                            decrement counter c
                                                            orrectly/Returns to
                                                             loop2
  117 0000009A F1B9 0F00       CMP              R9, #0      ; Checks if run out
                                                             of digits of origi
                                                            nal number
  118 0000009E D034            BEQ              next2
  119 000000A0 F8DB 4004       LDR              R4, [fp, #num]
  120 000000A4 FBB4 F6F5       UDIV             R6, R4, R5  ; Quotient
  121 000000A8 FB06 F705       MUL              R7, R6, R5  ; Quotient * 10
  122 000000AC EBB4 0807       SUBS             R8, R4, R7  ; Mod = Num - Quoti
                                                            ent*10 
  123 000000B0 F84D 8D04       PUSH             {R8}
  124 000000B4 F8CB 6004       STR              R6, [fp, #num]
  125 000000B8 F8DB 9000       LDR              R9, [fp, #count]
  126 000000BC F1B9 0901       SUBS             R9, #1      ; decrements counte
                                                            r
  127 000000C0 F8CB 9000       STR              R9, [fp, #count]
  128 000000C4 E7E4            B                loop2
  129 000000C6         
  130 000000C6         addPeriod                            ; Subroutine puttin
                                                            g period on the sta
                                                            ck and also decreme
                                                            nt counter
  131 000000C6 F06F 0401       MOV              R4, #period
  132 000000CA B410            PUSH             {R4}
  133 000000CC F8DB 9000       LDR              R9, [fp, #count]
  134 000000D0 F1B9 0901       SUBS             R9, #1      ; decrements counte
                                                            r
  135 000000D4 F8CB 9000       STR              R9, [fp, #count]
  136 000000D8 E7DA            B                loop2



ARM Macro Assembler    Page 4 


  137 000000DA         
  138 000000DA         stars
  139 000000DA 46EB            MOV              fp, SP      ; fp <- SP
  140 000000DC F04F 0405       MOV              R4, #5
  141 000000E0 F8CB 4000       STR              R4, [fp, #count]
  142 000000E4 F04F 0400       MOV              R4, #0
  143 000000E8 F8CB 0004       STR              R0, [fp, #num] ; Likely not nec
                                                            essary
  144 000000EC F06F 0405       MOV              R4, #star
  145 000000F0 B410            PUSH             {R4}
  146 000000F2 B410            PUSH             {R4}
  147 000000F4 B410            PUSH             {R4}
  148 000000F6 F06F 0401       MOV              R4, #period
  149 000000FA B410            PUSH             {R4}
  150 000000FC F06F 0405       MOV              R4, #star
  151 00000100 B410            PUSH             {R4}
  152 00000102 3505            ADDS             R5, #5      ; increments counte
                                                            r/redundant code li
                                                            kely
  153 00000104 F8CB 5000       STR              R5, [fp, #count] ;redundant cod
                                                            e likely
  154 00000108 E7FF            B                next2
  155 0000010A         
  156 0000010A         next2
  157 0000010A F04F 0905       MOV              R9, #5
  158 0000010E F8CB 9000       STR              R9, [fp, #count]
  159 00000112         printing
  160 00000112 F8DB 4000       LDR              R4, [fp, #count]
  161 00000116 2C00            CMP              R4, #0      ; checks if finishe
                                                            d writing all digit
                                                            s
  162 00000118 D008            BEQ              done2
  163 0000011A BC01            POP              {R0}
  164 0000011C F100 0030       ADD              R0, #0x30   ; converts decimal 
                                                            number to ASCII equ
                                                            ivalent
  165 00000120 F7FF FFFE       BL               ST7735_OutChar ; Writes char to
                                                             screen
  166 00000124 3C01            SUBS             R4, #1      ; Decrement count
  167 00000126 F8CB 4000       STR              R4, [fp, #count]
  168 0000012A E7F2            B                printing
  169 0000012C         
  170 0000012C         done2
  171 0000012C B002            ADD              SP, #8      ; deallocation
  172 0000012E E8BD 4BF0       POP              {R4-R9, R11, LR}
  173 00000132 4770            BX               LR
  174 00000134         
  175 00000134                 ALIGN
  176 00000134         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  177 00000134         
  178 00000134                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  179 00000134                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_DynamiteDodger -IC:\Users\ALPHA\App
Data\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\ALPHA\AppDat
a\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVA
L SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" -



ARM Macro Assembler    Page 5 


-predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\print.lst 
Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 18 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 39 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000068

Symbol: LCD_OutFix
   Definitions
      At line 100 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
addPeriod 000000C6

Symbol: addPeriod
   Definitions
      At line 130 in file Print.s
   Uses
      At line 116 in file Print.s
Comment: addPeriod used once
done 00000060

Symbol: done
   Definitions
      At line 74 in file Print.s
   Uses
      At line 66 in file Print.s
Comment: done used once
done2 0000012C

Symbol: done2
   Definitions
      At line 170 in file Print.s
   Uses
      At line 162 in file Print.s
Comment: done2 used once
loop 0000001A

Symbol: loop
   Definitions
      At line 48 in file Print.s
   Uses
      At line 61 in file Print.s
Comment: loop used once
loop2 00000090

Symbol: loop2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 113 in file Print.s
   Uses
      At line 128 in file Print.s
      At line 136 in file Print.s

next 00000046

Symbol: next
   Definitions
      At line 63 in file Print.s
   Uses
      At line 60 in file Print.s
      At line 72 in file Print.s

next2 0000010A

Symbol: next2
   Definitions
      At line 156 in file Print.s
   Uses
      At line 118 in file Print.s
      At line 154 in file Print.s

printing 00000112

Symbol: printing
   Definitions
      At line 159 in file Print.s
   Uses
      At line 168 in file Print.s
Comment: printing used once
stars 000000DA

Symbol: stars
   Definitions
      At line 138 in file Print.s
   Uses
      At line 105 in file Print.s
Comment: stars used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

count 00000000

Symbol: count
   Definitions
      At line 36 in file Print.s
   Uses
      At line 44 in file Print.s
      At line 55 in file Print.s
      At line 57 in file Print.s
      At line 64 in file Print.s
      At line 71 in file Print.s
      At line 108 in file Print.s
      At line 114 in file Print.s
      At line 125 in file Print.s
      At line 127 in file Print.s
      At line 133 in file Print.s
      At line 135 in file Print.s
      At line 141 in file Print.s
      At line 153 in file Print.s
      At line 158 in file Print.s
      At line 160 in file Print.s
      At line 167 in file Print.s

num 00000004

Symbol: num
   Definitions
      At line 37 in file Print.s
   Uses
      At line 45 in file Print.s
      At line 49 in file Print.s
      At line 54 in file Print.s
      At line 58 in file Print.s
      At line 110 in file Print.s
      At line 119 in file Print.s
      At line 124 in file Print.s
      At line 143 in file Print.s

period FFFFFFFE

Symbol: period
   Definitions
      At line 96 in file Print.s
   Uses
      At line 131 in file Print.s
      At line 148 in file Print.s

star FFFFFFFA

Symbol: star
   Definitions
      At line 95 in file Print.s
   Uses
      At line 144 in file Print.s
      At line 150 in file Print.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 69 in file Print.s
      At line 165 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
352 symbols in table
